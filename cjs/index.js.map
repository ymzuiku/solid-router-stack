{
  "version": 3,
  "sources": ["../lib/index.tsx", "../lib/historyProxy.ts", "../lib/stackOptions.tsx", "../lib/baseCss.ts", "../lib/createPropsSignal.ts", "../lib/setNavigationAnimation.ts"],
  "sourcesContent": ["import {\n  Accessor,\n  createRoot,\n  createSignal,\n  For,\n  lazy,\n  Setter,\n} from \"solid-js\";\n\nimport { historyProxy, Stack } from \"./historyProxy\";\nimport { stackOptions } from \"./stackOptions\";\nimport type {\n  Router,\n  RouterItem,\n  RouterNavigate,\n  Routers,\n  RoutersComonent,\n} from \"./types\";\nexport * from \"./baseCss\";\nexport * from \"./createPropsSignal\";\nexport * from \"./setNavigationAnimation\";\nexport { historyProxy };\nexport { stackOptions };\n\nconst classNow = \"solid-router-stack-now\";\nconst classBefore = \"solid-router-stack-before\";\nconst classLeave = \"solid-router-stack-leave\";\nconst classAfter = \"solid-router-stack-after\";\n\nexport const createRouters = <T extends Record<string, Router>>(\n  p: T\n): Record<keyof T, RouterNavigate> & Routers => {\n  const routers = { ...p } as any as Record<string, RouterItem>;\n  const [stack, setStack] = createRoot(() =>\n    createSignal<\n      {\n        stackShow: Accessor<boolean>;\n        setStackShow: Setter<boolean>;\n        // url: Accessor<string>;\n        // setUrl: Setter<string>;\n        path: Accessor<string>;\n        setPath: Setter<string>;\n        css: Accessor<string>;\n        setCss: Setter<string>;\n        stackTop: Accessor<boolean>;\n        setStackTop: Setter<boolean>;\n        params: Accessor<Record<string, string>>;\n        setParams: Setter<Record<string, string>>;\n      }[]\n    >([])\n  );\n\n  const createStack = (s: Stack) => {\n    const [path, setPath] = createSignal(s.path);\n    const [css, setCss] = createSignal(\"\");\n    const [stackTop, setStackTop] = createSignal(true);\n    const [stackShow, setStackShow] = createSignal(false);\n    const [params, setParams] = createSignal<Record<string, string>>(s.params);\n    return {\n      path,\n      setPath,\n      css,\n      setCss,\n      stackTop,\n      setStackTop,\n      params,\n      setParams,\n      stackShow,\n      setStackShow,\n    };\n  };\n\n  const pushSingleStask = () => {\n    const list = stack();\n    const item = list[list.length - 1];\n    if (item) {\n      item.setStackTop(false);\n    }\n\n    const s = historyProxy.stack[historyProxy.stack.length - 1];\n    const nextStack = createStack(s);\n    setStack([...stack().filter((v) => v.path() !== s.path), nextStack]);\n  };\n\n  const pushStask = () => {\n    const list = stack();\n    const item = list[list.length - 1];\n    if (item) {\n      item.setStackTop(false);\n    }\n\n    const s = historyProxy.stack[historyProxy.stack.length - 1];\n    const nextStack = createStack(s);\n    setStack([...stack(), nextStack]);\n  };\n  const popStask = () => {\n    const s = historyProxy.stack[historyProxy.stack.length - 1];\n    const list = stack();\n    if (list.length > 1) {\n      const item = list[list.length - 2];\n      item.setStackTop(true);\n      item.setPath(s.path);\n      item.setParams(s.params);\n      setStack([...list]);\n    }\n    setTimeout(() => {\n      list.pop();\n      setStack([...list]);\n    }, stackOptions.navigationDuration);\n  };\n  const replaceStask = () => {\n    const list = stack();\n    list.pop()!;\n    const s = historyProxy.stack[historyProxy.stack.length - 1];\n    const nextStack = createStack(s);\n    nextStack.setStackShow(true);\n    setStack([...list, nextStack]);\n  };\n  const clearStask = () => {\n    setStack([]);\n    pushStask();\n  };\n\n  const setNowStackClass = (className: string) => {\n    if (stackOptions.navigationDuration == 0) {\n      return;\n    }\n    const list = stack();\n    const item = list[list.length - 1];\n    if (item) {\n      item.setCss(className);\n    }\n  };\n\n  const setLastStackClass = (className: string) => {\n    if (stackOptions.navigationDuration == 0) {\n      return;\n    }\n    const list = stack();\n    const item = list[list.length - 2];\n    if (item) {\n      item.setCss(className);\n    }\n  };\n\n  const setNowShow = (isShow: boolean) => {\n    const list = stack();\n    const item = list[list.length - 1];\n    if (item) {\n      item.setStackShow(isShow);\n    }\n  };\n  const setLastShow = (isShow: boolean) => {\n    const list = stack();\n    const item = list[list.length - 2];\n    if (item) {\n      item.setStackShow(isShow);\n    }\n  };\n\n  let lastLen = 0;\n  let ignoreAnime = false;\n  historyProxy.listen((_path, statsType) => {\n    const nowLen = historyProxy.stack.length;\n    if (statsType === \"pushSingleState\") {\n      pushSingleStask();\n      if (ignoreAnime) {\n        setNowShow(true);\n        setLastShow(false);\n        setNowStackClass(classNow);\n        setLastStackClass(classAfter);\n      } else {\n        setNowShow(true);\n        setTimeout(() => {\n          setLastShow(false);\n        }, stackOptions.navigationDuration);\n        setNowStackClass(classBefore);\n        requestAnimationFrame(() => {\n          setLastStackClass(classAfter);\n          setNowStackClass(classNow);\n        });\n      }\n    } else if (statsType === \"clearState\") {\n      clearStask();\n      if (ignoreAnime) {\n        setNowShow(true);\n        setLastShow(false);\n        setNowStackClass(classNow);\n        setLastStackClass(classAfter);\n      } else {\n        setNowShow(true);\n        setTimeout(() => {\n          setLastShow(false);\n        }, stackOptions.navigationDuration);\n        setNowStackClass(classBefore);\n        requestAnimationFrame(() => {\n          setLastStackClass(classAfter);\n          setNowStackClass(classNow);\n        });\n      }\n    } else if (nowLen > lastLen) {\n      // push\n      pushStask();\n      if (ignoreAnime) {\n        setNowShow(true);\n        setLastShow(false);\n        setNowStackClass(classNow);\n        setLastStackClass(classAfter);\n      } else {\n        setNowShow(true);\n        setTimeout(() => {\n          setLastShow(false);\n        }, stackOptions.navigationDuration);\n        setNowStackClass(classBefore);\n        requestAnimationFrame(() => {\n          setLastStackClass(classAfter);\n          setNowStackClass(classNow);\n        });\n      }\n    } else if (lastLen !== nowLen && nowLen >= 1) {\n      setNowShow(true);\n      setLastShow(true);\n      // pop, \u5E76\u4E14\u4E0D\u662F\u6700\u540E\u4E00\u4E2A\n      setNowStackClass(classLeave);\n      setLastStackClass(classNow);\n      popStask();\n      if (ignoreAnime) {\n        setNowStackClass(classNow);\n      } else {\n        setTimeout(() => {\n          setNowStackClass(classNow);\n        }, stackOptions.navigationDuration);\n      }\n    } else {\n      setNowShow(true);\n      setLastShow(true);\n      // pop, \u4E14\u662F\u6700\u540E\u4E00\u4E2A\n      replaceStask();\n      setNowStackClass(classNow);\n    }\n\n    lastLen = nowLen;\n\n    if (ignoreAnime) {\n      requestAnimationFrame(() => {\n        ignoreAnime = false;\n      });\n    }\n  });\n\n  let isVirtualHistory = false;\n  const goBack = (\n    state?: Record<string, unknown>,\n    tempIgnoreAnime?: boolean\n  ) => {\n    if (tempIgnoreAnime) {\n      ignoreAnime = true;\n    }\n    historyProxy.goBack(state, isVirtualHistory);\n  };\n\n  const setItem = (item: RouterItem) => {\n    if (item.async) {\n      (item as any).Component = item.render;\n    } else {\n      const LazyComponent = lazy(item.render);\n      (item as any).Component = (p: any) => {\n        return <LazyComponent {...p} />;\n      };\n    }\n    item.push = (state, tempIgnoreAnime) => {\n      if (tempIgnoreAnime) {\n        ignoreAnime = true;\n      }\n      historyProxy.push(\n        historyProxy.parasmUrl(item.path, state),\n        isVirtualHistory\n      );\n    };\n    item.pushSingle = (state, tempIgnoreAnime) => {\n      if (tempIgnoreAnime) {\n        ignoreAnime = true;\n      }\n      historyProxy.pushSingle(historyProxy.parasmUrl(item.path, state));\n    };\n    item.replace = (state, tempIgnoreAnime) => {\n      if (tempIgnoreAnime) {\n        ignoreAnime = true;\n      }\n      historyProxy.replace(historyProxy.parasmUrl(item.path, state));\n    };\n    item.clearTo = (state, tempIgnoreAnime) => {\n      if (tempIgnoreAnime) {\n        ignoreAnime = true;\n      }\n      historyProxy.clearTo(historyProxy.parasmUrl(item.path, state));\n    };\n  };\n  setItem(stackOptions.notFound);\n  Object.keys(routers).forEach((k) => {\n    const item = routers[k];\n    setItem(item);\n  });\n\n  const routerMaps: Record<string, RouterItem> = {};\n  const needPreloadAll: RouterItem[] = [];\n  Object.keys(routers).map((k) => {\n    const router = routers[k];\n    if (router) {\n      routerMaps[router.path] = router;\n      if (!router.sync) {\n        needPreloadAll.push(router);\n      }\n    }\n  });\n\n  function preload(router: RouterItem) {\n    if (router.preloadAll) {\n      needPreloadAll.forEach((r) => {\n        r.render().then((v: any) => {\n          r.Component = v.default;\n          r.sync = true;\n        });\n      });\n    } else if (router.preload && router.preload.length) {\n      // 200 \u6BEB\u79D2\u540E\u9884\u52A0\u8F7D\u5176\u4ED6\u9875\u9762\n      setTimeout(() => {\n        router.preload!.forEach((k) => {\n          const r = routers[k];\n          if (r && !r.sync) {\n            r.render().then((v: any) => {\n              r.Component = v.default;\n              r.sync = true;\n            });\n          }\n        });\n      }, 200);\n    }\n  }\n\n  const RoutersComonent: RoutersComonent = ({\n    root,\n    hash,\n    ignoreFull,\n    virtualHistory,\n  }) => {\n    historyProxy.useHash = !!hash;\n    isVirtualHistory = !!virtualHistory;\n\n    const nowUrl = historyProxy.nowUrl();\n    const nowParams = historyProxy.searchUrlToObject(historyProxy.nowFullUrl());\n    ignoreAnime = true;\n    if (nowUrl !== \"/\" && nowUrl !== root.path) {\n      root.push(void 0, true);\n      const nowRouter = routerMaps[nowUrl] || stackOptions.notFound;\n      nowRouter.push({ ...nowParams });\n    } else {\n      root.push(nowParams, true);\n    }\n\n    const [getW, setW] = createSignal(\n      typeof window !== \"undefined\" ? window.innerWidth : 0\n    );\n    const [getH, setH] = createSignal(\n      typeof window !== \"undefined\" ? window.innerHeight : 0\n    );\n\n    if (!ignoreFull) {\n      if (typeof window !== \"undefined\") {\n        window.addEventListener(\"resize\", () => {\n          setW(window.innerWidth);\n          setH(window.innerHeight);\n        });\n      }\n    }\n\n    return (\n      <For each={stack()}>\n        {(item, i) => {\n          const router = routerMaps[item.path()] || stackOptions.notFound;\n          preload(router);\n          const Component = router.Component;\n          return (\n            <div\n              data-path={item.path()}\n              classList={{\n                [item.css()]: true,\n                [stackOptions.className]: true,\n              }}\n              style={{\n                \"pointer-events\": item.stackTop() ? \"auto\" : \"none\",\n                position: \"fixed\",\n                \"z-index\": i() * 10,\n                top: \"0px\",\n                left: \"0px\",\n                width: ignoreFull ? void 0 : getW() + \"px\",\n                height: ignoreFull ? void 0 : getH() + \"px\",\n              }}\n            >\n              <Component\n                stackLength={stack().length}\n                stackTop={item.stackTop()}\n                stackShow={item.stackShow()}\n                {...item.params()}\n              />\n            </div>\n          );\n        }}\n      </For>\n    );\n  };\n\n  return {\n    ...routers,\n    goBack,\n    Routers: RoutersComonent,\n  } as any;\n};\n", "// \u6B64\u6587\u4EF6\u8981\u4FDD\u6301\u5B58\u7CB9\uFF0C\u4EC5\u4EC5\u505A history \u548C stack \u7684\u7BA1\u7406\u548C\u4E8B\u4EF6\u76D1\u542C\n\n// popstate: \u4FEE\u6539url\uFF0C\u70B9\u51FB\u8FD4\u56DE\ntype State =\n  | \"popstate\"\n  | \"pushState\"\n  | \"pushSingleState\"\n  | \"replaceState\"\n  | \"backState\"\n  | \"clearState\";\nexport interface Stack {\n  url: string;\n  path: string;\n  time: number;\n  index: number;\n  params: Record<string, string>;\n}\ntype Event = (path: string, typed: State, stack: Stack[]) => void;\n\nconst events = [] as Event[];\n\nexport const listen = (event: Event) => {\n  events.push(event);\n};\n\ntype BeforeEvent = (url: string, path: string) => string | Promise<string>;\nconst beforeChangeEvent = [] as BeforeEvent[];\n\nexport const beforeChange = (event: BeforeEvent) => {\n  beforeChangeEvent.push(event);\n};\n\nconst newStack = (url: string): Stack => {\n  if (!url) {\n    url = nowFullUrl();\n  }\n  return {\n    url,\n    path: url.split(\"?\")[0],\n    params: searchUrlToObject(url) || {},\n    time: Date.now(),\n    index: historyProxy.stack.length,\n  };\n};\n\n[\n  \"popstate\",\n  \"pushState\",\n  \"pushSingleState\",\n  \"replaceState\",\n  \"backState\",\n  \"clearState\",\n].forEach((v) => {\n  window.addEventListener(v, () => {\n    let url = nowUrl();\n    if (v === \"popstate\") {\n      const oldStack = historyProxy.stack[historyProxy.stack.length - 2];\n      if (!oldStack || url !== oldStack.path) {\n        historyProxy.stack.pop();\n        historyProxy.stack.push(newStack(\"\"));\n      } else {\n        historyProxy.stack.pop();\n        if (historyProxy.stack.length === 0) {\n          const stack = newStack(\"\");\n          historyProxy.stack.push(stack);\n        }\n      }\n    }\n    const lastStack = historyProxy.stack[historyProxy.stack.length - 1];\n    events.forEach((e) => {\n      e(lastStack ? lastStack.path : \"\", v as State, historyProxy.stack);\n    });\n  });\n});\n\nconst baseGoBack = (data?: Record<string, unknown>) => {\n  const len = historyProxy.stack.length;\n  if (len == 1) {\n    return \"\";\n  }\n  historyProxy.stack.pop();\n  if (!historyProxy.stack.length) {\n    historyProxy.stack.push(newStack(\"\"));\n  }\n  let stack = historyProxy.stack[historyProxy.stack.length - 1];\n\n  let url = stack.path;\n  if (historyProxy.useHash) {\n    url = \"/#\" + stack.path;\n  }\n  url = parasmUrl(url, {\n    ...searchUrlToObject(stack.url),\n    ...data,\n  });\n  stack.params = searchUrlToObject(url) || {};\n  stack.url = url;\n  return url;\n};\n\nconst push = async (url: string, ignoreHistory?: boolean) => {\n  for (const e of beforeChangeEvent) {\n    url = await Promise.resolve(e(url, urlToPath(url)));\n  }\n  historyProxy.stack.push(newStack(url));\n  if (historyProxy.useHash) {\n    url = \"/#\" + url;\n  }\n  history.pushState(null, \"\", url);\n  if (ignoreHistory) {\n    window.dispatchEvent(new Event(\"replaceState\"));\n  } else {\n    window.dispatchEvent(new Event(\"pushState\"));\n  }\n};\n\n// push a page, if have old page, remove old\nconst pushSingle = async (url: string) => {\n  for (const e of beforeChangeEvent) {\n    url = await Promise.resolve(e(url, urlToPath(url)));\n  }\n  const stack = newStack(url);\n  historyProxy.stack = historyProxy.stack.filter((v) => {\n    return v.path !== stack.path;\n  });\n  historyProxy.stack.push(stack);\n  if (historyProxy.useHash) {\n    url = \"/#\" + url;\n  }\n  history.pushState(null, \"\", url);\n  window.dispatchEvent(new Event(\"pushSingleState\"));\n};\n\nconst replace = async (url: string) => {\n  for (const e of beforeChangeEvent) {\n    url = await Promise.resolve(e(url, urlToPath(url)));\n  }\n  if (historyProxy.stack.length > 0) {\n    historyProxy.stack.pop();\n  }\n  historyProxy.stack.push(newStack(url));\n  if (historyProxy.useHash) {\n    url = \"/#\" + url;\n  }\n\n  history.replaceState(null, \"\", url);\n  window.dispatchEvent(new Event(\"replaceState\"));\n};\n\nconst goBack = (data?: Record<string, unknown>, ignoreHistory?: boolean) => {\n  const url = baseGoBack(data);\n  if (url == \"\") {\n    return;\n  }\n  history.replaceState(null, \"\", url);\n  if (ignoreHistory) {\n    window.dispatchEvent(new Event(\"replaceState\"));\n  } else {\n    window.dispatchEvent(new Event(\"backState\"));\n  }\n};\n\nconst clearTo = (url: string) => {\n  historyProxy.stack = [newStack(url)];\n  history.replaceState(null, \"\", url);\n  window.dispatchEvent(new Event(\"clearState\"));\n};\n\nfunction search() {\n  const [url1, url2] = location.href.split(\"#\");\n  return new URLSearchParams(\n    [url1.split(\"?\")[1], url2.split(\"?\")[1]].join(\"&\")\n  );\n}\n\nfunction urlToPath(url: string) {\n  return url.split(\"?\")[0];\n}\n\nfunction nowUrl() {\n  if (!location.hash) {\n    return \"/\";\n  }\n  const list = location.hash.split(\"#\");\n  if (list.length < 2) {\n    return \"/\";\n  }\n\n  return list[1].split(\"?\")[0];\n}\nfunction nowFullUrl() {\n  if (!location.hash) {\n    return \"/\";\n  }\n  const list = location.hash.split(\"#\");\n  if (list.length < 2) {\n    return \"/\";\n  }\n\n  return list[1];\n}\n\nfunction parasmUrl(url: string, state?: Record<string, unknown>) {\n  if (state) {\n    const realState: Record<string, unknown> = {};\n    Object.keys(state).forEach((k) => {\n      const v = state[k];\n      if (v !== void 0 && v !== \"\") {\n        realState[k] = v;\n      }\n    });\n    const p = new URLSearchParams(realState as any).toString();\n    if (p) {\n      return url + \"?\" + p;\n    }\n    return url;\n  }\n  return url;\n}\n\nfunction searchUrlToObject(url: string): Record<string, string> | undefined {\n  const [url1, url2] = url.split(\"#\");\n  const obj = new URLSearchParams(\n    [url1.split(\"?\")[1], url2 ? url2.split(\"?\")[1] : \"\"].join(\"&\")\n  );\n  const out: Record<string, string> = {};\n  let hasProps = false;\n  for (const [k, v] of obj.entries()) {\n    hasProps = true;\n    if (v !== void 0 && v !== \"\") {\n      out[k] = v;\n    }\n  }\n  if (!hasProps) {\n    return void 0;\n  }\n  return out;\n}\n\nexport const historyProxy = {\n  search,\n  nowUrl,\n  urlToPath,\n  nowFullUrl,\n  push,\n  pushSingle,\n  replace,\n  goBack,\n  clearTo,\n  listen,\n  beforeChange,\n  searchUrlToObject,\n  parasmUrl,\n  /** \u5F53\u8DEF\u5F84\u8FD4\u56DE\u8DEF\u5F84\u4E3A\u6700\u540E\u4E00\u4E2A\u65F6\uFF0C\u53EF\u4EE5\u4FEE\u6539\u8FD4\u56DE\u8DEF\u5F84 */\n  onLastBack: (stack: Stack): string => {\n    return stack.url;\n  },\n  newStack,\n  stack: [] as Stack[],\n  useHash: false,\n};\n", "import type { RouterItem } from \"./types\";\n\nexport const stackOptions = {\n  navigationDuration: 0,\n  className: \"\",\n  notFound: {\n    async: true,\n    render: () => <div>Not found page</div>,\n  } as RouterItem,\n  fallback: <div></div>,\n};\n", "export const moveTopCss = (t: number) => {\n  const transition = `transition: transform ${t}ms ease-out, opacity ${t}ms ease-out;`;\n  return `\n.solid-router-stack-now {\n  ${transition}\n}\n.solid-router-stack-before {\n  ${transition}\n  will-change: transform, opacity;\n  transform: translateY(7vh);\n}\n.solid-router-stack-leave {\n  ${transition}\n  will-change: transform, opacity;\n  opacity: 0;\n  transform: translateY(15vh);\n  pointer-events: none !important;\n}\n.solid-router-stack-after {\n  ${transition}\n  will-change: transform, opacity;\n  transform: translateY(-5vh);\n  pointer-events: none !important;\n}\n`;\n};\n\nexport const moveLeftCss = (t: number) => {\n  const transition = `transition: transform ${t}ms ease-out, opacity ${t}ms ease-out;`;\n  return `\n.solid-router-stack-now {\n  ${transition}\n  box-shadow: -10px 0px 20px rgba(0,0,0,0.12);\n}\n.solid-router-stack-before {\n  ${transition}\n  will-change: transform, opacity;\n  transform: translateX(100vw);\n  box-shadow: -10px 0px 20px rgba(0,0,0,0.12);\n}\n.solid-router-stack-leave {\n  ${transition}\n  will-change: transform, opacity;\n  transform: translateX(100vw);\n  box-shadow: 0px -10px 20px rgba(0,0,0,0.12);\n  pointer-events: none !important;\n}\n.solid-router-stack-after {\n  ${transition}\n  will-change: transform, opacity;\n  transform: translateX(-30vw);\n  pointer-events: none !important;\n}\n`;\n};\n\nexport const scaleCss = (t: number) => {\n  const transition = `transition: transform ${t}ms ease-out, opacity ${t}ms ease-out;`;\n  return `\n.solid-router-stack-now {\n  ${transition}\n}\n.solid-router-stack-before {\n  ${transition}\n  will-change: transform, opacity;\n  opacity: 0;\n  transform: scale(0.8);\n}\n.solid-router-stack-leave {\n  ${transition}\n  will-change: transform, opacity;\n  transform: scale(0.8);\n  opacity: 0;\n  pointer-events: none !important;\n}\n.solid-router-stack-after {\n  ${transition}\n  will-change: transform, opacity;\n  transform: scale(1.05);\n  pointer-events: none !important;\n}\n`;\n};\n", "import { Accessor, createEffect, createSignal, Setter } from \"solid-js\";\n\nexport function createPropsSignal<T, K extends keyof T>(\n  props: T,\n  key: K,\n  defaultValue?: T[K]\n): [Accessor<T[K]>, Setter<T[K]>] {\n  const [get, set] = createSignal(props[key] || defaultValue);\n  createEffect(() => {\n    set((props as any)[key] || defaultValue);\n  });\n  return [get, set] as any;\n}\n", "import { moveLeftCss, moveTopCss, scaleCss } from \"./baseCss\";\nimport { stackOptions } from \"./stackOptions\";\n\nexport const setCustomNavigationAnimation = (\n  animeCss: string,\n  navigationDuration = 260\n) => {\n  Object.assign(stackOptions, {\n    navigationDuration,\n  });\n\n  if (typeof window !== \"undefined\") {\n    const sty = document.getElementById(\"solid-router-stack-css\");\n    if (sty) {\n      sty.innerHTML = animeCss;\n    } else {\n      const sty = document.createElement(\"style\");\n      sty.id = \"solid-router-stack-css\";\n      sty.innerHTML = animeCss;\n      document.head.append(sty);\n    }\n  }\n};\n\nconst moveMap = {\n  moveTop: moveTopCss,\n  moveLeft: moveLeftCss,\n  scale: scaleCss,\n};\n\nexport const setNavigationAnimation = (\n  type: \"moveTop\" | \"moveLeft\" | \"scale\" | \"auto\" | \"none\",\n  duration = 150\n) => {\n  if (type === \"none\") {\n    stackOptions.navigationDuration = 0;\n    const sty = document.getElementById(\"solid-router-stack-css\");\n    if (sty) {\n      sty.remove();\n    }\n  } else if (type === \"auto\") {\n    if (typeof window == \"undefined\") {\n      setCustomNavigationAnimation(moveTopCss(duration), duration + 10);\n    } else {\n      setCustomNavigationAnimation(\n        window.innerWidth > window.innerHeight\n          ? moveTopCss(duration)\n          : moveLeftCss(duration + 10),\n        260\n      );\n    }\n  } else {\n    setCustomNavigationAnimation(moveMap[type](duration), duration + 10);\n  }\n};\n"],
  "mappings": "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",
  "names": ["import_solid_js", "events", "listen", "event", "beforeChangeEvent", "beforeChange", "newStack", "url", "nowFullUrl", "searchUrlToObject", "historyProxy", "v", "nowUrl", "oldStack", "stack", "lastStack", "e", "baseGoBack", "data", "parasmUrl", "push", "ignoreHistory", "urlToPath", "pushSingle", "replace", "goBack", "clearTo", "search", "url1", "url2", "list", "state", "realState", "k", "p", "obj", "out", "hasProps", "stackOptions", "navigationDuration", "className", "notFound", "async", "render", "_tmpl$", "fallback", "_tmpl$2", "moveTopCss", "transition", "moveLeftCss", "scaleCss", "import_solid_js", "createPropsSignal", "props", "key", "defaultValue", "get", "set", "setCustomNavigationAnimation", "animeCss", "navigationDuration", "stackOptions", "sty", "moveMap", "moveTopCss", "moveLeftCss", "scaleCss", "setNavigationAnimation", "type", "duration", "classNow", "classBefore", "classLeave", "classAfter", "createRouters", "p", "routers", "stack", "setStack", "createRoot", "createSignal", "createStack", "s", "path", "setPath", "css", "setCss", "stackTop", "setStackTop", "stackShow", "setStackShow", "params", "setParams", "pushSingleStask", "list", "item", "length", "historyProxy", "nextStack", "filter", "v", "pushStask", "popStask", "setTimeout", "pop", "stackOptions", "navigationDuration", "replaceStask", "clearStask", "setNowStackClass", "className", "setLastStackClass", "setNowShow", "isShow", "setLastShow", "lastLen", "ignoreAnime", "listen", "_path", "statsType", "nowLen", "requestAnimationFrame", "isVirtualHistory", "goBack", "state", "tempIgnoreAnime", "setItem", "async", "Component", "render", "LazyComponent", "lazy", "_$createComponent", "push", "parasmUrl", "pushSingle", "replace", "clearTo", "notFound", "Object", "keys", "forEach", "k", "routerMaps", "needPreloadAll", "map", "router", "sync", "preload", "preloadAll", "r", "then", "default", "Routers", "root", "hash", "ignoreFull", "virtualHistory", "useHash", "nowUrl", "nowParams", "searchUrlToObject", "nowFullUrl", "getW", "setW", "window", "innerWidth", "getH", "setH", "innerHeight", "addEventListener", "i", "_el$", "_tmpl$", "_$insert", "_$mergeProps", "_$effect", "_p$", "_v$", "_v$2", "_v$3", "_v$4", "_v$5", "_v$6", "_$setAttribute", "_$classList"]
}
